<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.icss.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.icss.model.Order" >
    <id column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="order_no" property="orderNo" jdbcType="CHAR" />
    <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
    <result column="customer_id" property="customerId" jdbcType="INTEGER" />
    <result column="payment_type" property="paymentType" jdbcType="INTEGER" />
    <result column="payment_time" property="paymentTime" jdbcType="TIMESTAMP" />
    <result column="address_id" property="addressId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="DATE" />
    <result column="express_no" property="expressNo" jdbcType="CHAR" />
    <result column="express_company" property="expressCompany" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="bak" property="bak" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    order_id, order_no, order_status, customer_id, payment_type, payment_time, address_id, 
    create_time, express_no, express_company, amount, bak
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_order
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_order
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.icss.model.Order" >
    insert into t_order (order_id, order_no, order_status, 
      customer_id, payment_type, payment_time, 
      address_id, create_time, express_no, 
      express_company, amount, bak
      )
    values (#{orderId,jdbcType=INTEGER}, #{orderNo,jdbcType=CHAR}, #{orderStatus,jdbcType=INTEGER}, 
      #{customerId,jdbcType=INTEGER}, #{paymentType,jdbcType=INTEGER}, #{paymentTime,jdbcType=TIMESTAMP}, 
      #{addressId,jdbcType=INTEGER}, #{createTime,jdbcType=DATE}, #{expressNo,jdbcType=CHAR}, 
      #{expressCompany,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, #{bak,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.icss.model.Order" >
    insert into t_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="paymentType != null" >
        payment_type,
      </if>
      <if test="paymentTime != null" >
        payment_time,
      </if>
      <if test="addressId != null" >
        address_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="expressNo != null" >
        express_no,
      </if>
      <if test="expressCompany != null" >
        express_company,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="bak != null" >
        bak,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=CHAR},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="paymentType != null" >
        #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null" >
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addressId != null" >
        #{addressId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATE},
      </if>
      <if test="expressNo != null" >
        #{expressNo,jdbcType=CHAR},
      </if>
      <if test="expressCompany != null" >
        #{expressCompany,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="bak != null" >
        #{bak,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.icss.model.Order" >
    update t_order
    <set >
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=CHAR},
      </if>
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="paymentType != null" >
        payment_type = #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null" >
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addressId != null" >
        address_id = #{addressId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="expressNo != null" >
        express_no = #{expressNo,jdbcType=CHAR},
      </if>
      <if test="expressCompany != null" >
        express_company = #{expressCompany,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="bak != null" >
        bak = #{bak,jdbcType=VARCHAR},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.icss.model.Order" >
    update t_order
    set order_no = #{orderNo,jdbcType=CHAR},
      order_status = #{orderStatus,jdbcType=INTEGER},
      customer_id = #{customerId,jdbcType=INTEGER},
      payment_type = #{paymentType,jdbcType=INTEGER},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      address_id = #{addressId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=DATE},
      express_no = #{expressNo,jdbcType=CHAR},
      express_company = #{expressCompany,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      bak = #{bak,jdbcType=VARCHAR}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
</mapper>